{
    "project": {
        "name": "Mira-Editor",
        "description": "Documentação do Mira-Editor",
        "version": "1.0",
        "url": "tecweblab.github.io/mira-editor/docs"
    },
    "files": {
        "Code.js": {
            "name": "Code.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Entities.js": {
            "name": "Entities.js",
            "modules": {},
            "classes": {
                "HTMLElement": 1,
                "Div": 1,
                "Paragraph": 1,
                "Header": 1,
                "Link": 1,
                "Span": 1,
                "Label": 1,
                "List": 1,
                "ListItem": 1,
                "SimpleHtml": 1,
                "ImageHtml": 1,
                "Carousel": 1,
                "CarouselItem": 1,
                "BootstrapNavigation": 1,
                "BootstrapNavigationList": 1,
                "BootstrapNavigationListItem": 1,
                "Formulario": 1,
                "InputText": 1,
                "InputTextarea": 1,
                "InputRadioCheck": 1,
                "InputSelect": 1,
                "InputOption": 1,
                "Button": 1,
                "AbstractElement": 1,
                "AbstractInterface": 1,
                "ConcreteInterface": 1
            },
            "fors": {
                "HTMLElement": 1,
                "AbstractInterface": 1,
                "ConcreteInterface": 1
            },
            "namespaces": {}
        },
        "Preview.js": {
            "name": "Preview.js",
            "modules": {},
            "classes": {
                "Preview": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Project.js": {
            "name": "Project.js",
            "modules": {},
            "classes": {
                "Project": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "RenderElements.js": {
            "name": "RenderElements.js",
            "modules": {},
            "classes": {
                "RenderElements": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Sidebar.js": {
            "name": "Sidebar.js",
            "modules": {},
            "classes": {
                "Code": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Tree.js": {
            "name": "Tree.js",
            "modules": {},
            "classes": {
                "Tree": 1
            },
            "fors": {
                "Tree": 1,
                "Tree.initModalAndEvents": 1
            },
            "namespaces": {}
        },
        "UIEvents.js": {
            "name": "UIEvents.js",
            "modules": {},
            "classes": {
                "UIEvents": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Code": {
            "name": "Code",
            "shortname": "Code",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Sidebar.js",
            "line": 1,
            "description": "Classe responsável pelos métodos de gereção e exibição do código da interface abstrata e concreta",
            "is_constructor": 1,
            "author": "João Victor Magela"
        },
        "HTMLElement": {
            "name": "HTMLElement",
            "shortname": "HTMLElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 1,
            "description": "Elemento concreto generalizado.",
            "author": "João Victor Magela",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "O elemento concreto."
            }
        },
        "Div": {
            "name": "Div",
            "shortname": "Div",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 97,
            "description": "Elemento concreto Div.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Div HTMLElement com as informações padrões de um Div"
            }
        },
        "Paragraph": {
            "name": "Paragraph",
            "shortname": "Paragraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 114,
            "description": "Elemento concreto Paragraph.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Parágrafo."
            }
        },
        "Header": {
            "name": "Header",
            "shortname": "Header",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 135,
            "description": "Elemento concreto Header.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Título."
            }
        },
        "Link": {
            "name": "Link",
            "shortname": "Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 161,
            "description": "Elemento concreto Link.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Link."
            }
        },
        "Span": {
            "name": "Span",
            "shortname": "Span",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 186,
            "description": "Elemento concreto Span.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Span."
            }
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 205,
            "description": "Elemento concreto Label.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Label."
            }
        },
        "List": {
            "name": "List",
            "shortname": "List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 224,
            "description": "Elemento concreto List.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de uma Lista."
            }
        },
        "ListItem": {
            "name": "ListItem",
            "shortname": "ListItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 247,
            "description": "Elemento concreto ListItem.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um item da Lista."
            }
        },
        "SimpleHtml": {
            "name": "SimpleHtml",
            "shortname": "SimpleHtml",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 266,
            "description": "Elemento concreto SimpleHtml.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um elemento HTML qualquer."
            }
        },
        "ImageHtml": {
            "name": "ImageHtml",
            "shortname": "ImageHtml",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 290,
            "description": "Elemento concreto ImageHtml.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de uma Imagem."
            }
        },
        "Carousel": {
            "name": "Carousel",
            "shortname": "Carousel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 333,
            "description": "Elemento concreto Carousel.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de uma galeria de fotos."
            }
        },
        "CarouselItem": {
            "name": "CarouselItem",
            "shortname": "CarouselItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 356,
            "description": "Elemento concreto CarouselItem.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um item da galeria de fotos."
            }
        },
        "BootstrapNavigation": {
            "name": "BootstrapNavigation",
            "shortname": "BootstrapNavigation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 380,
            "description": "Elemento concreto BootstrapNavigation.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um Bootstrap Menu."
            }
        },
        "BootstrapNavigationList": {
            "name": "BootstrapNavigationList",
            "shortname": "BootstrapNavigationList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 402,
            "description": "Elemento concreto BootstrapNavigationList.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de uma lista do Bootstrap Menu."
            }
        },
        "BootstrapNavigationListItem": {
            "name": "BootstrapNavigationListItem",
            "shortname": "BootstrapNavigationListItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 425,
            "description": "Elemento concreto BootstrapNavigationListItem.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um item da lista do Bootstrap Menu."
            }
        },
        "Formulario": {
            "name": "Formulario",
            "shortname": "Formulario",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 457,
            "description": "Elemento concreto Formulario.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um formulário."
            }
        },
        "InputText": {
            "name": "InputText",
            "shortname": "InputText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 476,
            "description": "Elemento concreto InputText.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um input do tipo texto."
            }
        },
        "InputTextarea": {
            "name": "InputTextarea",
            "shortname": "InputTextarea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 500,
            "description": "Elemento concreto InputTextarea.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de uma caixa de texto."
            }
        },
        "InputRadioCheck": {
            "name": "InputRadioCheck",
            "shortname": "InputRadioCheck",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 518,
            "description": "Elemento concreto InputRadioCheck.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um radiobox ou checkbox."
            }
        },
        "InputSelect": {
            "name": "InputSelect",
            "shortname": "InputSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 554,
            "description": "Elemento concreto InputSelect.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um combobox."
            }
        },
        "InputOption": {
            "name": "InputOption",
            "shortname": "InputOption",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 570,
            "description": "Elemento concreto InputOption.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de uma opção do combobox."
            }
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 593,
            "description": "Elemento concreto Button.",
            "is_constructor": 1,
            "extends": "HTMLElement",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado contendo informações iniciais para o construtor.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTMLElement com as informações padrões de um botão."
            }
        },
        "AbstractElement": {
            "name": "AbstractElement",
            "shortname": "AbstractElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 622,
            "description": "Classe que representa um elemento abstrato.",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento do plugin BootstrapTreeView.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "AbstractInterface": {
            "name": "AbstractInterface",
            "shortname": "AbstractInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 660,
            "description": "Classe que representa um conjunto de widgets abstratos.",
            "is_constructor": 1
        },
        "ConcreteInterface": {
            "name": "ConcreteInterface",
            "shortname": "ConcreteInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Entities.js",
            "line": 694,
            "description": "Classe que representa um conjunto de widgets concretos.",
            "is_constructor": 1
        },
        "Preview": {
            "name": "Preview",
            "shortname": "Preview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Preview.js",
            "line": 1,
            "description": "Classe responsável pelos métodos de renderização do Preview.",
            "author": "João Victor Magela",
            "is_constructor": 1
        },
        "Project": {
            "name": "Project",
            "shortname": "Project",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Project.js",
            "line": 1,
            "description": "Classe responsável pelos métodos de de gerenciamento do projeto (Salvar, novo e abrir).",
            "author": "João Victor Magela",
            "is_constructor": 1
        },
        "RenderElements": {
            "name": "RenderElements",
            "shortname": "RenderElements",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "RenderElements.js",
            "line": 1,
            "description": "Classe responsável pelos métodos de renderização da aplicação (exibição dos elemento concreto, TreeView, Código gerado)",
            "author": "João Victor Magela",
            "is_constructor": 1
        },
        "Tree": {
            "name": "Tree",
            "shortname": "Tree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Tree.js",
            "line": 87,
            "description": "Módulo reponsável por gerenciar a TreeView representando a interface abstrata. Isso é uma adaptação do Plugin BootstrapTreeView,\ndesenvolvido por Jonathan Miles.",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "element",
                    "description": "Seletor jQuery onde o plugin irá atuar.",
                    "type": "Selector"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções de inicialização do plugin.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Uma instância do plugin BootstrapTreeView."
            }
        },
        "Tree.initModalAndEvents": {
            "name": "Tree.initModalAndEvents",
            "shortname": "Tree.initModalAndEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "UIEvents": {
            "name": "UIEvents",
            "shortname": "UIEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "UIEvents.js",
            "line": 1,
            "description": "Classe responsável pelos métodos de instalação das funcionalidades Draggable e Resize do jQuery UI.",
            "author": "João Victor Magela",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "Code.js",
            "line": 10,
            "itemtype": "property",
            "name": "times Modelo pré definido para execução dos testes.",
            "type": "{Object}",
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 43,
            "itemtype": "property",
            "name": "resultAbstractInterface Interface Concreta para teste.",
            "type": "{Object}",
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 85,
            "itemtype": "property",
            "name": "resultConcreteInterface Interface Concreta para teste.",
            "type": "{Object}",
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 107,
            "description": "Método responsável por trocar todas as ocorrências de uma determinada expressão por outra.",
            "params": [
                {
                    "name": "de",
                    "description": "Expressão a ser trocada.",
                    "type": "String"
                },
                {
                    "name": "para",
                    "description": "Nova expressão a ser inserida",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Nova string"
            },
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 124,
            "description": "Método responsável por remover as aspas duplas de determinados termos.",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "cleanString",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A string sem termos com aspas duplas."
            },
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 150,
            "description": "Método responsável por gerar uma interface abstrata para testes.",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "initAbstract",
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 188,
            "description": "Método responsável por gerar uma interface concreta para testes.",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "initConcrete",
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 214,
            "description": "Método responsável por executar os testes",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "tests",
            "static": 1,
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 227,
            "description": "Teste: Gerar código das interfaces",
            "author": "João Victor Magela\n\nVerificar se a geração do código para a Interface Concreta e Abstrata está de acordo com o esperado.\nPassos:\n1 - Gerar o código das Interfaces.\n2 - Verificar se está de acordo com o esperado.",
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 267,
            "description": "Método responsável por exibir em um modal do Twitter Bootstrap o código gerado.",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "openModalCode",
            "static": 1,
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 282,
            "description": "Método responsável por exibir o código gerado da interface abstrata.",
            "author": "João Victor Magela.",
            "params": [
                {
                    "name": "data",
                    "description": "Dados com os widgets abstratos.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "showAbstractInterfaceCode",
            "static": 1,
            "class": "Code"
        },
        {
            "file": "Code.js",
            "line": 295,
            "description": "Método responsável por exibir o código gerado da interface concreta.",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "showConcreteInterfaceCode",
            "static": 1,
            "class": "Code"
        },
        {
            "file": "Entities.js",
            "line": 11,
            "itemtype": "property",
            "name": "id Identificador do Elemento.",
            "type": "{Number}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 17,
            "itemtype": "property",
            "name": "name Nome do Elemento.",
            "type": "{string}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 23,
            "itemtype": "property",
            "name": "value Valor associado ao Elemento.",
            "type": "{string}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 29,
            "itemtype": "property",
            "name": "class Classes CSS associadas ao Elemento.",
            "type": "{string}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 35,
            "itemtype": "property",
            "name": "typeElement tipo do elemento concreto.",
            "type": "{string}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 41,
            "itemtype": "property",
            "name": "html Objeto jQuery representado o HTML do elemento concreto.",
            "type": "{jQuery}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 47,
            "itemtype": "property",
            "name": "tag Tag referente ao elemento concreto.",
            "type": "{string}",
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 56,
            "description": "Método responsável por atualizar os valores de um HTMLElement.",
            "itemtype": "method",
            "name": "updateAttr",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "attrs",
                    "description": "Objeto com os valores a serem atualizados.",
                    "type": "Object"
                }
            ],
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 69,
            "description": "Método responsável por obter o template de um elemento concreto.",
            "itemtype": "method",
            "name": "getTemplate",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "item",
                    "description": "Tipo do elemento concreto.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Objeto jQuery com o HTML do elemento concreto.",
                "type": "JQuery"
            },
            "class": "HTMLElement"
        },
        {
            "file": "Entities.js",
            "line": 124,
            "itemtype": "property",
            "name": "tag Tag referente ao elemento concreto.",
            "type": "{string}",
            "class": "Paragraph"
        },
        {
            "file": "Entities.js",
            "line": 151,
            "itemtype": "property",
            "name": "headerTag Determina qual a tag do título (h1-h6).",
            "type": "{string}",
            "default": "\"h1\"",
            "class": "Header"
        },
        {
            "file": "Entities.js",
            "line": 177,
            "itemtype": "property",
            "name": "href Caminho do link.",
            "type": "{string}",
            "class": "Link"
        },
        {
            "file": "Entities.js",
            "line": 238,
            "itemtype": "property",
            "name": "listTag Determina o tipo da lista(\"ul\" ou \"ol\").",
            "type": "{string}",
            "class": "List"
        },
        {
            "file": "Entities.js",
            "line": 281,
            "itemtype": "property",
            "name": "simpleHtmlTag Valor da tag referente ao elemento concreto.",
            "type": "{string}",
            "class": "SimpleHtml"
        },
        {
            "file": "Entities.js",
            "line": 306,
            "itemtype": "property",
            "name": "alt Texto alternativo para a imagem.",
            "type": "{string}",
            "class": "ImageHtml"
        },
        {
            "file": "Entities.js",
            "line": 312,
            "itemtype": "property",
            "name": "src Caminho físico da imagem.",
            "type": "{string}",
            "class": "ImageHtml"
        },
        {
            "file": "Entities.js",
            "line": 318,
            "itemtype": "property",
            "name": "width largura da imagem.",
            "type": "{string}",
            "class": "ImageHtml"
        },
        {
            "file": "Entities.js",
            "line": 324,
            "itemtype": "property",
            "name": "height Altura da imagem.",
            "type": "{string}",
            "class": "ImageHtml"
        },
        {
            "file": "Entities.js",
            "line": 347,
            "itemtype": "property",
            "name": "widget Determina a qual classe pertence elemento concreto.",
            "type": "{string}",
            "class": "Carousel"
        },
        {
            "file": "Entities.js",
            "line": 371,
            "itemtype": "property",
            "name": "widget Determina a qual classe pertence elemento concreto.",
            "type": "{string}",
            "class": "CarouselItem"
        },
        {
            "file": "Entities.js",
            "line": 393,
            "itemtype": "property",
            "name": "widget Determina a qual classe pertence elemento concreto.",
            "type": "{string}",
            "class": "BootstrapNavigation"
        },
        {
            "file": "Entities.js",
            "line": 416,
            "itemtype": "property",
            "name": "widget Determina a qual classe pertence elemento concreto.",
            "type": "{string}",
            "class": "BootstrapNavigationList"
        },
        {
            "file": "Entities.js",
            "line": 440,
            "itemtype": "property",
            "name": "href Link para o item da lista.",
            "type": "{string}",
            "class": "BootstrapNavigationListItem"
        },
        {
            "file": "Entities.js",
            "line": 446,
            "itemtype": "property",
            "name": "widget Determina a qual classe pertence elemento concreto.",
            "type": "{string}",
            "class": "BootstrapNavigationListItem"
        },
        {
            "file": "Entities.js",
            "line": 491,
            "itemtype": "property",
            "name": "type Determina o tipo do input (text, file e etc.).",
            "type": "{string}",
            "class": "InputText"
        },
        {
            "file": "Entities.js",
            "line": 533,
            "itemtype": "property",
            "name": "type Determina o tipo do input (radio ou check).",
            "type": "{string}",
            "class": "InputRadioCheck"
        },
        {
            "file": "Entities.js",
            "line": 539,
            "itemtype": "property",
            "name": "tagRadio Determina qual o tipo do elemento concreto no momento (radio ou check).",
            "type": "{string}",
            "class": "InputRadioCheck"
        },
        {
            "file": "Entities.js",
            "line": 545,
            "itemtype": "property",
            "name": "text Determina o texto apresentado na label.",
            "type": "{string}",
            "class": "InputRadioCheck"
        },
        {
            "file": "Entities.js",
            "line": 584,
            "itemtype": "property",
            "name": "text Determina o texto da opção.",
            "type": "{string}",
            "class": "InputOption"
        },
        {
            "file": "Entities.js",
            "line": 607,
            "itemtype": "property",
            "name": "type Determina o tipo do botão.",
            "type": "{string}",
            "class": "Button"
        },
        {
            "file": "Entities.js",
            "line": 613,
            "itemtype": "property",
            "name": "text Determina o texto apresentado no botão.",
            "type": "{string}",
            "class": "Button"
        },
        {
            "file": "Entities.js",
            "line": 629,
            "itemtype": "property",
            "name": "name Determina o nome do elemento abstrato.",
            "type": "{string}",
            "class": "AbstractElement"
        },
        {
            "file": "Entities.js",
            "line": 635,
            "itemtype": "property",
            "name": "datasource Link onde se encontram as informações a serem baixadas.",
            "type": "{string}",
            "class": "AbstractElement"
        },
        {
            "file": "Entities.js",
            "line": 641,
            "itemtype": "property",
            "name": "bind Expressão para obter informação a partir dos dados a partir do datasource.",
            "type": "{string}",
            "class": "AbstractElement"
        },
        {
            "file": "Entities.js",
            "line": 647,
            "itemtype": "property",
            "name": "parse Expressão para obter dados internos aos dados já obtidos no datasource.",
            "type": "{string}",
            "class": "AbstractElement"
        },
        {
            "file": "Entities.js",
            "line": 653,
            "itemtype": "property",
            "name": "children Determina o nome da interface abstrata.",
            "type": "{Array}",
            "class": "AbstractElement"
        },
        {
            "file": "Entities.js",
            "line": 666,
            "itemtype": "property",
            "name": "name Determina o nome da interface abstrata.",
            "type": "{string}",
            "class": "AbstractInterface"
        },
        {
            "file": "Entities.js",
            "line": 672,
            "itemtype": "property",
            "name": "widgets Conjunto de elementos abstratos.",
            "type": "{Array}",
            "class": "AbstractInterface"
        },
        {
            "file": "Entities.js",
            "line": 679,
            "description": "Método responsável por gerar o código da interface abstrata.",
            "itemtype": "method",
            "name": "generateAbstractInterface",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "widgets",
                    "description": "Conjunto de elementos abstratos.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Código formatado referente a interface abstrata."
            },
            "class": "AbstractInterface"
        },
        {
            "file": "Entities.js",
            "line": 700,
            "itemtype": "property",
            "name": "name Determina o nome da interface concreta.",
            "type": "{string}",
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 706,
            "itemtype": "property",
            "name": "maps Conjunto de elementos concretos da aplicação mapeados.",
            "type": "{Array}",
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 712,
            "itemtype": "property",
            "name": "head Conjunto de elementos concretos para o cabeçalho da página.",
            "type": "{Array}",
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 718,
            "itemtype": "property",
            "name": "concreteInterfaceItems Conjunto de elementos concretos da aplicação.",
            "type": "{Array}",
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 725,
            "description": "Método responsável por gerar o código da interface concreta.",
            "itemtype": "method",
            "name": "generateConcreteInterface",
            "author": "João Victor Magela",
            "return": {
                "description": "Código no formato JSON referente a interface concreta."
            },
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 758,
            "description": "Método responsável por procurar um determinado elemento concreto na interface concreta",
            "itemtype": "method",
            "name": "findItem",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Elemento concreto ou um elemento vazio (caso não seja encontrado)."
            },
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 773,
            "description": "Método responsável por atualizar um determinado elemento concreto na interface concreta",
            "itemtype": "method",
            "name": "replaceItem",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "item",
                    "description": "Elemento concreto.",
                    "type": "Object"
                }
            ],
            "class": "ConcreteInterface"
        },
        {
            "file": "Entities.js",
            "line": 793,
            "description": "Método responsável por limpar a lista de elementos concretos.",
            "itemtype": "method",
            "name": "cleanConcreteInterface",
            "author": "João Victor Magela",
            "class": "ConcreteInterface"
        },
        {
            "file": "Preview.js",
            "line": 9,
            "description": "Método responsável por obter o valor associado a um elemento concreto (através do bind ou inserido manualmente)",
            "itemtype": "method",
            "name": "_getValue",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrato contendo informações.",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "isBind",
                    "description": "Determina se o valor deve ser obtido do bind ou não.",
                    "type": "Boolean"
                },
                {
                    "name": "attr",
                    "description": "Atributo no qual deseja-se obter o valor.",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "Os valores associados ao elemento concreto."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 46,
            "description": "Metodo responsável por renderizar um DIV no preview.",
            "itemtype": "method",
            "name": "_renderDiv",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado a DIV."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 63,
            "description": "Metodo responsável por renderizar um Parágrafo no preview.",
            "itemtype": "method",
            "name": "_renderParagraph",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Parágrafo."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 79,
            "description": "Metodo responsável por renderizar um Título no preview.",
            "itemtype": "method",
            "name": "_renderHeader",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Parágrafo."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 97,
            "description": "Metodo responsável por renderizar um DIV no preview.",
            "itemtype": "method",
            "name": "_renderLink",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Título."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 117,
            "description": "Metodo responsável por renderizar um Label no preview.",
            "itemtype": "method",
            "name": "_renderLabel",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Label."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 135,
            "description": "Metodo responsável por renderizar um Span no preview.",
            "itemtype": "method",
            "name": "_renderSpan",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Span."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 152,
            "description": "Metodo responsável por renderizar uma Lista no preview.",
            "itemtype": "method",
            "name": "_renderList",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado a Lista."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 168,
            "description": "Metodo responsável por renderizar um Item da Lista no preview.",
            "itemtype": "method",
            "name": "_renderListItem",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Item da Lista."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 185,
            "description": "Metodo responsável por renderizar uma Imagem no preview.",
            "itemtype": "method",
            "name": "_renderImage",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Imagem."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 205,
            "description": "Metodo responsável por renderizar uma Galeria de Imagens no preview.",
            "itemtype": "method",
            "name": "_renderCarousel",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado a Galeria de Imagens."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 226,
            "description": "Metodo responsável por renderizar um Item da Galeria de Imagens no preview.",
            "itemtype": "method",
            "name": "_renderCarouselItem",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Item da Galeria de Imagens."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 248,
            "description": "Metodo responsável por renderizar um Menu no preview.",
            "itemtype": "method",
            "name": "_renderNavigation",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Menu."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 269,
            "description": "Metodo responsável por renderizar uma Lista de Navegação no preview.",
            "itemtype": "method",
            "name": "_renderNavigationList",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado a Lista de Navegação."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 288,
            "description": "Metodo responsável por renderizar um Item da Lista de Navegação no preview.",
            "itemtype": "method",
            "name": "_renderNavigationListItem",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Item da Lista de Navegação."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 306,
            "description": "Metodo responsável por renderizar um Formulário no preview.",
            "itemtype": "method",
            "name": "_renderForm",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Formulário."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 323,
            "description": "Metodo responsável por renderizar um Campo Texto no preview.",
            "itemtype": "method",
            "name": "_renderInputText",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Campo Texto."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 339,
            "description": "Metodo responsável por renderizar um Textarea no preview.",
            "itemtype": "method",
            "name": "_renderInputTextarea",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Textarea."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 354,
            "description": "Metodo responsável por renderizar um Radiobox ou Checkbox no preview.",
            "itemtype": "method",
            "name": "_renderInputRadioCheck",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Radiobox ou Checkbox."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 373,
            "description": "Metodo responsável por renderizar um Combobox no preview.",
            "itemtype": "method",
            "name": "_renderInputSelect",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Combobox."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 388,
            "description": "Metodo responsável por renderizar uma Opção do Combobox no preview.",
            "itemtype": "method",
            "name": "_renderInputOption",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Opção do Combobox."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 405,
            "description": "Metodo responsável por renderizar um Botão no preview.",
            "itemtype": "method",
            "name": "_renderInputButton",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "O objeto jQuery representado o Botão."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 422,
            "description": "Método responsável por renderizar um elemento de acordo com seu tipo.",
            "itemtype": "method",
            "name": "_renderElement",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrado com valores associados ao elemento concreto",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Elemento concreto com propriedades atribuidas pelo usuário",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados.",
                    "type": "Numeber"
                }
            ],
            "return": {
                "description": "jQuery do elemento concreto."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 458,
            "description": "Metodo responsável por obter o índice onde serão buscadas as informações para renderização do elemento concreto.",
            "itemtype": "method",
            "name": "_getCurrentIndex",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "rootNode",
                    "description": "Elemento abstrato que é pai de um determinado elemento abstrado.",
                    "type": "Object"
                },
                {
                    "name": "parentIndex",
                    "description": "Índice associado aos dados do pai"
                },
                {
                    "name": "loopIndex",
                    "description": "Índice associado ao loop corrente"
                }
            ],
            "return": {
                "description": "parentIndex"
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 477,
            "description": "Método responsável por renderizar o preview.",
            "itemtype": "method",
            "name": "_renderPreview",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjunto de Elementos abstratos",
                    "type": "Array"
                },
                {
                    "name": "root",
                    "description": "Local onde serão renderizados os elementos.",
                    "type": "JQuery"
                },
                {
                    "name": "rootNode",
                    "description": "Nó corrente.",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Índice onde se deve obter os dados para renderização do elemento.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "O preview renderizado."
            },
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 522,
            "description": "Métod responsável por iniciar a operação de rendereização do preview.",
            "itemtype": "method",
            "name": "_runPreview",
            "author": "João Victor Magela",
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 531,
            "description": "Método responsável por executar os testes",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "tests",
            "static": 1,
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 540,
            "description": "Teste: Exibir Preview",
            "author": "João Victor Magela\n\nVerificar se está captando os valores de forma correta.\nPassos:\n1 - Testar o método _getValue.\n2 - Verificar se o valor captado é o esperado.",
            "class": "Preview"
        },
        {
            "file": "Preview.js",
            "line": 578,
            "description": "Método responsável por criar a opção Tab do Bootstrap",
            "itemtype": "method",
            "name": "tabBootstrap",
            "author": "João Victor Magela",
            "static": 1,
            "class": "Preview"
        },
        {
            "file": "Project.js",
            "line": 64,
            "description": "Método responsável por converter um Objeto aninhado em um vetor aninhado.",
            "itemtype": "method",
            "name": "_nestedObjectToArray",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "obj",
                    "description": "Object como um Array.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Array aninhado."
            },
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 88,
            "description": "Método responsável por gerar um arquivo JSON contendo as informações do projeto e fazer o download do mesmo.",
            "itemtype": "method",
            "name": "_downloadJson",
            "author": "João Victor Magela",
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 103,
            "description": "Método responsável por iniciar o mira-editor com valores padrões.",
            "itemtype": "method",
            "name": "initDefault",
            "author": "João Victor Magela",
            "static": 1,
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 125,
            "description": "Método responsável por iniciar o mira-editor com um valor customizado.",
            "itemtype": "method",
            "name": "initCustom",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "abstractInterface",
                    "description": "Dados para iniciação custmizada do mira-editor",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 231,
            "description": "Método responsável por salvar os dados do projeto no localStorage.",
            "itemtype": "method",
            "name": "saveWebStorage",
            "author": "João Victor Magela",
            "static": 1,
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 246,
            "description": "Método responsável por captar os dados salvos no localStorage.",
            "itemtype": "method",
            "name": "loadWebStorage",
            "author": "João Victor Magela",
            "static": 1,
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 273,
            "description": "Método responsável por executar os testes",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "tests",
            "static": 1,
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 281,
            "description": "Teste: Salvar projeto",
            "author": "João Victor Magela\n\nVerificar se o projeto foi salvo com os valores corretos.\nPassos:\n1 - Salvar os dados no localStorage\n2 - Buscar os dados no localStorage\n3 - Verificar se os resultados são os mesmos",
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 308,
            "description": "Teste: Novo projeto",
            "author": "João Victor Magela\n\nVerificar se foi iniciado um projeto com os valores padrões.\nPassos:\n1 - Inicializar o projeto com os valores padrões.\n2 - Verificar se a Interface Concreta, Abstrata e o nome do projeto estão com os valores padrões.",
            "class": "Project"
        },
        {
            "file": "Project.js",
            "line": 333,
            "description": "Teste: Abrir projeto",
            "author": "João Victor Magela\n\nVerificar se o projeto foi iniciado com os valores contidos no arquivo..\nPassos:\n1 - Verificar a extensão de um arquivo.\n2 - Verificar se o arquivo é válido.\n3 - Verificar se os dados foram carregados com sucesso.",
            "class": "Project"
        },
        {
            "file": "RenderElements.js",
            "line": 12,
            "description": "Método responsável por renderizar os elementos concretos no protótipo.",
            "itemtype": "method",
            "name": "_renderConcreteInterface",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento abstrato.",
                    "type": "Object"
                },
                {
                    "name": "root",
                    "description": "Elemento jQuery onde serão inseridos novos elementos concretos.",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "O protótipo com os elementos."
            },
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 56,
            "description": "Método responsável por realizar a mudança de um elemento concreto para outro tipo.",
            "itemtype": "method",
            "name": "_changeElement",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "item",
                    "description": "Elemento concreto.",
                    "type": "Object"
                },
                {
                    "name": "value",
                    "description": "Tipo do novo elemento concreto.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "O novo elemento concreto."
            },
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 92,
            "description": "Evento disparado quando há a mudança do elemento concreto no combobox. A partir do novo elemento selecionado, é buscado o template correspondente\ne feita a atualização do elemento concreto.",
            "itemtype": "event",
            "name": "ChangeSelectType",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 113,
            "description": "Método responsável por executar os testes",
            "itemtype": "method",
            "name": "testsTreeView",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 121,
            "description": "Método responsável por executar o evento keydown de para Esc, Enter ou Tab em um input text",
            "itemtype": "method",
            "name": "_triggerkeyDownEvent",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 141,
            "description": "Método responsável por testar a adição de um elemento e pressionar enter no campo. O resultado deve ser a confirmação da operação",
            "itemtype": "method",
            "name": "_testAddElementRootEnter",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 159,
            "description": "Método responsável por testar a adição de um elemento e pressionar tab no campo. O resultado deve ser a confirmação da operação",
            "itemtype": "method",
            "name": "_testAddElementRootTab",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 171,
            "description": "Método responsável por testar a adição de um elemento e pressionar esc no campo. O resultado deve ser a anulação da operação",
            "itemtype": "method",
            "name": "_testAddElementRootEsc",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 186,
            "description": "Método responsável por testar a remoção dos elementos selecionados.",
            "itemtype": "method",
            "name": "_testRemoveSelectedsRoot",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 211,
            "description": "Método responsável por testar a edição de um elemento.",
            "itemtype": "method",
            "name": "_testRemoveSelectedsRoot",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 239,
            "description": "Método responsável por testar a adição de um filho a um elemento.",
            "itemtype": "method",
            "name": "_testAddChild",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 281,
            "description": "Método responsável por testar a remoção de um elemento e seus filhos",
            "itemtype": "method",
            "name": "_testRemoveElement",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 308,
            "description": "Método responsável por testar a remoção dos filhos de um elemento",
            "itemtype": "method",
            "name": "_testRemoveChidrenSelected",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 330,
            "description": "Método responsável por testar a inserção de dados em um elemento com uma expressão inválida",
            "itemtype": "method",
            "name": "_testInsertDataError",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 350,
            "description": "Método responsável por retornar os dados da requisição AJAX",
            "itemtype": "method",
            "name": "_testAjax",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 371,
            "description": "Método responsável por testar a operação de inserir informações em um elemento.",
            "itemtype": "method",
            "name": "_testInsertData",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 417,
            "description": "Método responsável por testar a mudança do tipo de elemento.",
            "itemtype": "method",
            "name": "_testChangeElement",
            "author": "João Victor Magela",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 440,
            "description": "Teste: Adicionar item à raiz da árvore",
            "author": "João Victor Magela\n\nVerificar a adição de elementos na raiz da árvore.\nPassos:\n1 - Clicar no botão e pressionar \"Enter\" no campo.\n2 - Clicar no botão e pressionar \"Tab\" no campo.\n3 - Clicar no botão e pressionar \"Esc\" no campo.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 456,
            "description": "Teste: Remover itens selecionados da raiz",
            "author": "João Victor Magela\n\nVerificar se os itens selecionados da raiz estão sendo removidos.\nPassos:\n1 - Selecionar os itens da raiz que deseja remover.\n2 - Clicar no botão de remoção.\n3 - Verificar se os itens foram removidos.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 471,
            "description": "Teste: Editar elemento",
            "author": "João Victor Magela\n\nVerificar se a edição de um elemento é feita com sucesso.\nPassos:\n1 - Clica no botão editar de um elemento.\n2 - Pressionar a tecla Enter no campo e verifica se foi confirmada a operação.\n3 - Repetir a operação pressionando a tecla Tab e verificar se a mesma foi confirmada.\n4 - Repetir a operação pressionando a tecla Esc e verificar se a mesmafoi cancelada.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 488,
            "description": "Teste: Adicionar filho",
            "author": "João Victor Magela\n\nVerificar a adição de um item para um nó existente.\nPassos:\n1 - Clica no botão adicionar filho de um elemento.\n2 - Pressionar a tecla Enter no campo e verificar se foi confirmada a operação.\n3 - Repetir a operação pressionando a tecla Tab e verificar se a mesma foi confirmada.\n4 - Repetir a operação pressionando a tecla Esc e verificar se a mesma foi cancelada.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 503,
            "description": "Teste: Remover Elemento",
            "author": "João Victor Magela\n\nVerificar se, ao excluir um item, seus filhos também são removidos.\nPassos:\n1 - Clicar no botão de remoção de um elemento.\n2 - Verificar se os filhos foram removidos.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 516,
            "description": "Teste: Remover filhos selecionados",
            "author": "João Victor Magela\n\nVerificar a remoção dos itens selecionados de um nó existente.\nPassos:\n1 - Selecionar os itens a serem removidos.\n2 - Clicar no botão de remover filhos selecionados do pai.\n3 - Verificar se os itens foram removidos.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 531,
            "description": "Teste: Inserir dados",
            "author": "João Victor Magela\n\nVerificar se a requisição e passagem dos dados é feita com sucesso.\nPassos:\n1 - Selecionar os itens da árvore com filhos.\n2 - Fazer uma requisição AJAX com uma url/expressão inválida.\n3 - Fazer uma requisição AJAX com uma url/expressão válida.\n4 - Verificar se os dados foram passados para os filhos.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 549,
            "description": "Teste: Alterar Tipo do Elemento",
            "author": "João Victor Magela\n\nVerificar se a operação de mudança do elemento é feita com sucesso.\nPassos:\n1 - Alterar o tipo do elemento.\n2 - Verificar se a operação foi feita com sucesso.",
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 565,
            "description": "Método responsável por obter o template base dos elementos.",
            "itemtype": "method",
            "name": "initRenderElements",
            "author": "João Victor Magela",
            "static": 1,
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 575,
            "description": "Método responsável por definir as ações do botão para a raiz da TreeView (Não existe tal funcionalidade no plugin)",
            "itemtype": "method",
            "name": "commandsRootTree",
            "author": "João Victor Magela",
            "static": 1,
            "class": "RenderElements"
        },
        {
            "file": "RenderElements.js",
            "line": 618,
            "description": "Método responsável por renderizar a TreeView e a partir disso atualizar toda a aplicação.",
            "itemtype": "method",
            "name": "renderTree",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "data",
                    "description": "Instancia do plugin BootstrapTreeView.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "RenderElements"
        },
        {
            "file": "Sidebar.js",
            "line": 11,
            "itemtype": "property",
            "name": "_currentObj",
            "type": "Object",
            "default": "null",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 19,
            "itemtype": "property",
            "name": "_currentElement",
            "type": "jQuery",
            "default": "null",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 27,
            "itemtype": "property",
            "name": "_sidebar",
            "type": "HTMLElement",
            "default": "null",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 35,
            "description": "Método responsável por renderizar o formulário de propriedades de um determinado elemento concreto.",
            "itemtype": "method",
            "name": "_getForm",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "attrs",
                    "description": "Atributos do elemento concreto.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "HTML do formulário para um determinado elemento concreto."
            },
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 46,
            "description": "Método responsável por obter os valores do atributos de um determinado elemento concreto.",
            "itemtype": "method",
            "name": "_getAttrs",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "data",
                    "description": "Atributos e valores de um elemento concreto.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Objeto com atributos e valores a serem inserido no formulário."
            },
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 62,
            "description": "Método responsável por salvar as informações inseridas no formulário de propriedades.",
            "itemtype": "method",
            "name": "_saveForm",
            "author": "João Victor Magela",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 73,
            "description": "Método responsável por executar os testes",
            "itemtype": "method",
            "name": "tests",
            "author": "João Victor Magela",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 81,
            "description": "Teste: Propriedades do elemento",
            "author": "João Victor Magela\n\nVerificar se, ao abrir o formulário de propriedades, o campo “valor” está preenchido com “$bind”, para um elemento abstrato com Bind associado.\nPassos:\n1 - Clicar no botão de propriedades do elemento.\n2 - Verificar se o campo “Valor” está com o valor “$bind”.",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 124,
            "description": "Teste: Salvar propriedades",
            "author": "João Victor Magela\n\nVerificar se o método updateAttr está funcionando corretamente.\nPassos:\n1 - Executar o método updateAttr com um conjunto de atributos como parâmetro.",
            "class": "Code"
        },
        {
            "file": "Sidebar.js",
            "line": 149,
            "description": "Método responsável por instalar o plugin jQuery.sidr",
            "itemtype": "method",
            "name": "installSidebarAndPropForm",
            "author": "João Victor Magela",
            "static": 1,
            "class": "Code"
        },
        {
            "file": "Tree.js",
            "line": 97,
            "itemtype": "property",
            "name": "$element Objeto jQuery onde o plugin irá atuar.",
            "type": "{jQuery}",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 103,
            "itemtype": "property",
            "name": "elementId Identificador do item da lista.",
            "type": "{Selector}",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 109,
            "itemtype": "property",
            "name": "id classe inicial para identificação do item da lista.",
            "type": "{string}",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 177,
            "description": "Método responsável por iniciar o plugin com os opões informadas",
            "itemtype": "method",
            "name": "init",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções desejadas.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 206,
            "description": "Dertermina o identificador de um elemento gerado pelo plugin.",
            "itemtype": "method",
            "name": "setId",
            "author": "Jonathan Miles",
            "return": {
                "description": "O idenficador do elemento gerado."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 218,
            "description": "Método responsável por criar filhos para um determinado nó.",
            "itemtype": "method",
            "name": "createNodes",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Nó que será o pai no novo nó.",
                    "type": "Object"
                },
                {
                    "name": "values",
                    "description": "Valores a serem inseridos no novo elemento.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "node Nó pai atualizado."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 250,
            "description": "Método reponsável por gerar os widgets abstratos.",
            "itemtype": "method",
            "name": "createAbstractInterface",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjuntos de nós do BootstrapTreeView",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Conjuto de elementos abstratos aninhados, caso necessário."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 276,
            "description": "Método responsável por sincronizar os dados da TreeView com dados externos ao plugin.",
            "itemtype": "method",
            "name": "reloadData",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "tree",
                    "description": "",
                    "type": "Elementos da TreeView aninhados"
                },
                {
                    "name": "nodes",
                    "description": "",
                    "type": "Elementos da TreeView como uma lista linear"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 300,
            "description": "Método responsável por iniciar as operações com modal e eventos do botões.",
            "itemtype": "method",
            "name": "initModalAndEvents",
            "author": "João Victor Magela",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 311,
            "description": "Método responsável por fazer o parse dos dados de acordo com um determinado atributo",
            "itemtype": "method",
            "name": "initModalAndEvents",
            "author": "João Victor Magela",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 415,
            "description": "Evento disparado ao clicar no botão de editar a partir de algum nó da TreeView. Com isso o elemento fica editável.",
            "itemtype": "event",
            "name": "Editar nó",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 463,
            "description": "Evento disparado ao clicar no botão de adicionar um filho a partir de algum nó da TreeView. Com isso um novo elemento é inserido como filho do\nnó correspondente.",
            "itemtype": "event",
            "name": "Adicionar um filho.",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 506,
            "description": "Evento disparado ao clicar no botão de baixar informações a partir de algum nó da TreeView. Com isso um modal é exibindo podendo inserir as\ninformações \"bind\", \"datasource\" e \"parse\" (caso haja um datasource válido).",
            "author": "João Victor Magela",
            "itemtype": "event",
            "name": "Baixar informações para um nó.",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 542,
            "description": "Evento disparado ao clicar no botão de remover um nó da TreeView. Com isso o nó e seus filhos são excluídos.",
            "itemtype": "event",
            "name": "Adicionar um filho.",
            "author": "João Victor Magela",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 559,
            "description": "Evento disparado ao clicar no botão de remover nós selecionados a partir de algum nó da TreeView. Com isso os nós filhos que estão selecionados são\nexcluídos, bem como seus filhos.",
            "itemtype": "event",
            "name": "Remover filhos selecionados.",
            "author": "João Victor Magela",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 583,
            "description": "Métodos responsável por filtrar os atributos de um conjunto de valores.",
            "itemtype": "method",
            "name": "_getValue",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "data",
                    "description": "Conjunto de valores ou um simples objeto.",
                    "type": "Object | Array"
                }
            ],
            "return": {
                "description": "Caso seja um array, retorna um Objeto presente na primeira posição, caso contrário retorna o objeto inteiro."
            },
            "class": "Tree.initModalAndEvents"
        },
        {
            "file": "Tree.js",
            "line": 595,
            "description": "Métodos responsável por atualizar a tabela que informa os valores da tabela.",
            "itemtype": "method",
            "name": "_refreshTable",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "Corpo",
                    "description": "da tabela.",
                    "type": "JQuery"
                },
                {
                    "name": "data",
                    "description": "Atributos a serem inseridos na tabela.",
                    "type": "Object"
                }
            ],
            "class": "Tree.initModalAndEvents"
        },
        {
            "file": "Tree.js",
            "line": 620,
            "description": "Método responsável por obter os dados a partir de um determinado datasource e atualzar a tabela de atributos.",
            "itemtype": "method",
            "name": "_getDataFromDatasource",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "data",
                    "description": "Dados obtidos a partir de um datasource",
                    "type": "Object | Array"
                }
            ],
            "class": "Tree.initModalAndEvents"
        },
        {
            "file": "Tree.js",
            "line": 641,
            "description": "Método responsável por informar que foi possível obter os dados a partir do datasource informado.",
            "itemtype": "method",
            "name": "_getDataFromDatasourceFail",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "button",
                    "description": "Botão que gerou a operação.",
                    "type": "JQuery"
                }
            ],
            "class": "Tree.initModalAndEvents"
        },
        {
            "file": "Tree.js",
            "line": 656,
            "description": "Evento disparado ao clicar no botão baixar informações a partir de um datasource. Caso seja um datasource válido será possível inserir um parse para \nobter dados internos aos já obtidos.",
            "itemtype": "event",
            "name": "Remover baixar informações a partir de um datasource.",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 708,
            "description": "Evento disparado ao clicar no botão parse. Exibe os atributos referentes aos novos dados obtidos. \nobter dados internos aos já obtidos.",
            "author": "João Victor Magela",
            "itemtype": "event",
            "name": "Parse dos dados obtidos.",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 723,
            "description": "Evento disparado ao confirmar os dados informados no formulário do modal.",
            "author": "João Victor Magela",
            "itemtype": "event",
            "name": "Confirmar dados do modal.",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 759,
            "description": "Método responsável por repassar os dados do pai pro filho, se necessário em toda a Tree.",
            "itemtype": "method",
            "name": "broadcastData",
            "author": "João Victor Magela",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 772,
            "description": "Método responsável por passar os dados de pai para filho, se necessário",
            "itemtype": "method",
            "name": "setDataToChildren",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Nó corrente",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Dados associados ao nó corrente.",
                    "type": "Object | Array"
                }
            ],
            "return": {
                "description": "node Nó com os dados obtidos do pai."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 797,
            "description": "Método responsável por remover os dados do plugin.",
            "itemtype": "method",
            "name": "remove",
            "author": "Jonathan Miles",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 809,
            "description": "Método responsável por destruir a instancia da Tree.",
            "itemtype": "method",
            "name": "destroy",
            "author": "Jonathan Miles",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 829,
            "description": "Método responsável por desativar todos os eventos da Tree.",
            "itemtype": "method",
            "name": "unsubscribeEvents",
            "author": "Jonathan Miles",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 851,
            "description": "Método responsável por ativar os eventos da Tree.",
            "itemtype": "method",
            "name": "subscribeEvents",
            "author": "Jonathan Miles",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 909,
            "description": "Define o estado inicial de cada nó da árvore (valores padrões)",
            "itemtype": "method",
            "name": "setInitialStates",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Elemento da Tree.",
                    "type": "Object"
                },
                {
                    "name": "level",
                    "description": "Nível na qual o nó se encontra.",
                    "type": "Number"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 988,
            "description": "Método responsável por definir como será o clique em cada item da lista",
            "itemtype": "method",
            "name": "clickHandler",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "event",
                    "description": "Dados do evento.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1026,
            "description": "Método responsável por procurar um nó na Tree.",
            "itemtype": "method",
            "name": "findNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Number | jQuery"
                }
            ],
            "return": {
                "description": "node Nó da Tree."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1050,
            "description": "Método responsável por procurar um nó pelo seu idenficador",
            "itemtype": "method",
            "name": "findNodeById",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "id",
                    "description": "Identificador do nó.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "node Nó da Tree."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1072,
            "description": "Método responsável por atualizar um nó e seus filhos.",
            "itemtype": "method",
            "name": "refreshTree",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjunto de nós",
                    "type": "Array"
                },
                {
                    "name": "node",
                    "description": "Nó com novas informações.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "nodes Retorna o conjunto de nós atualizados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1093,
            "description": "Método responsável por remover um ou mais nós da lista de elementos.",
            "itemtype": "method",
            "name": "removeNodesInNodes",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjunto de nós para pesquisa",
                    "type": "Árray"
                },
                {
                    "name": "ids",
                    "description": "Conjunto de identificadores dos nós a serem removidos.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Conjunto de nós com os nós removidos."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1112,
            "description": "Método responsável por remover um ou mais nós da Tree.",
            "itemtype": "method",
            "name": "removeNodesInTree",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjunto de nós para pesquisa",
                    "type": "Árray"
                },
                {
                    "name": "ids",
                    "description": "Conjunto de identificadores dos nós a serem removidos.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Conjunto de nós com os nós removidos."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1139,
            "description": "Método responsável por atualizar o identificador dos nós.",
            "itemtype": "method",
            "name": "refreshIds",
            "author": "João Victor Magela",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1165,
            "description": "Método responsável por trocar o modo e expansão do nó (expandido ou não)",
            "itemtype": "method",
            "name": "toggleExpandedState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó corrente.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1178,
            "description": "Método responsável por deixar um nó como expandido ou não",
            "itemtype": "method",
            "name": "setExpandedState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó alvo.",
                    "type": "Object"
                },
                {
                    "name": "state",
                    "description": "Estado de expansão (true para expandido) .",
                    "type": "Boolean"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1216,
            "description": "Método responsável por trocar o estado de seleção do nó.",
            "itemtype": "method",
            "name": "toggleSelectedState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó alvo.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1229,
            "description": "Método responsável por determinar o estado de seleção do nó (selecionado ou não)",
            "itemtype": "method",
            "name": "setSelectedState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó alvo.",
                    "type": "Object"
                },
                {
                    "name": "state",
                    "description": "Estado de seleção do nó (true, para selecionado)."
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1267,
            "description": "Método responsável por trocar o estado de checagem do nó",
            "itemtype": "method",
            "name": "toggleCheckedState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó alvo.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1280,
            "description": "Método responsável por determinar o estado de checagem do nó.",
            "itemtype": "method",
            "name": "setCheckedState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó alvo.",
                    "type": "Object"
                },
                {
                    "name": "state",
                    "description": "Estado de checagem do nó (true, para marcado)."
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1312,
            "description": "Método responsável por determinar o estado de ativação do nó.",
            "itemtype": "method",
            "name": "setDisabledState",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "Nó alvo.",
                    "type": "Object"
                },
                {
                    "name": "state",
                    "description": "Estado de ativação do no (true, para desativado)."
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1349,
            "description": "Método responsável por renderizar a TreeView.",
            "itemtype": "method",
            "name": "render",
            "author": "Jonathan Miles",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1375,
            "description": "Método responsável por contruir a TreeView.",
            "itemtype": "method",
            "name": "buildTree",
            "author": "Jonathan Miles | João Victor Magela",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "level",
                    "description": "Nível corrente.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A instância atual da Tree."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1548,
            "description": "Método responsável por definir o estilo (CSS) do nó.",
            "itemtype": "method",
            "name": "buildStyleOverride",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "node",
                    "description": "No corrente.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A expressão CSS para o nó da TreeView."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1585,
            "description": "Método responsável por injetar o estilo de acordo com a identificação do nó.",
            "itemtype": "method",
            "name": "injectStyle",
            "author": "Jonathan Miles",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1598,
            "description": "Método responsável por definir a estilização do no de acordo com as opções passadas para o plugin.",
            "itemtype": "method",
            "name": "buildStyle",
            "author": "Jonathan Miles",
            "return": {
                "description": "Expressão CSS padrões de acordo com as opções passadas."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1634,
            "description": "Template para a renderização da TreeView.",
            "itemtype": "property",
            "name": "template",
            "type": "Object",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1661,
            "description": "Estilo padrão para os nós da TreeView.",
            "itemtype": "property",
            "name": "css",
            "type": "string",
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1671,
            "description": "Método responsável por retornar um nó da TreeView a partir do identificador interno do plugin",
            "itemtype": "method",
            "name": "getNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "nodeId",
                    "description": "- Identificador interno do nó.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Nó da TreeView."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1683,
            "description": "Método responsável por adicionar um nó na raiz da TreeView.",
            "itemtype": "method",
            "name": "addElement",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "node",
                    "description": "Nó a ser adicionado.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1700,
            "description": "Método responsável por remover um conjunto de nós da Tree.",
            "itemtype": "method",
            "name": "removeElements",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "ids",
                    "description": "Conjunto de identificadores do nós a serem removidos.",
                    "type": "Array"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1714,
            "description": "Método responsável por obter o pai de um determinado nó",
            "itemtype": "method",
            "name": "getParent",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifier",
                    "description": "Identificador do nó filho.",
                    "type": "JQuery | Number | Selector"
                }
            ],
            "return": {
                "description": "O pai do nó informado."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1727,
            "description": "Método responsável por obter os irmãos de um nó",
            "itemtype": "method",
            "name": "getSiblings",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifier",
                    "description": "Identificador do nó",
                    "type": "JQuery | Number | Selector"
                }
            ],
            "return": {
                "description": "Os irmãos de um determinado nó."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1744,
            "description": "Método responsável por obter todos os nós selecionados.",
            "itemtype": "method",
            "name": "getSelected",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto do nós selecionados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1755,
            "description": "Método responsável por obter todos os nós não selecionados.",
            "itemtype": "method",
            "name": "getUnselected",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós não selecionados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1766,
            "description": "Método responsável por obter todos os nós expandidos.",
            "itemtype": "method",
            "name": "getExpanded",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós expandidos.\nfor Tree"
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1777,
            "description": "Método responsável por obter todos os nós não expandidos.",
            "itemtype": "method",
            "name": "getCollapsed",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós não expandidos."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1788,
            "description": "Método responsável por obter todos os nós marcados.",
            "itemtype": "method",
            "name": "getChecked",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós marcados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1799,
            "description": "Método responsável por obter todos os nós não marcados.",
            "itemtype": "method",
            "name": "getUnchecked",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós não marcados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1810,
            "description": "Método responsável por obter todos os nós desativados.",
            "itemtype": "method",
            "name": "getDisabled",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós desativados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1821,
            "description": "Método responsável por obter todos os nós desativados.",
            "itemtype": "method",
            "name": "getEnabled",
            "author": "Jonathan Miles",
            "return": {
                "description": "Conjunto de nós desativados."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1833,
            "description": "Método responsável por selecionar um conjunto de nós.",
            "itemtype": "method",
            "name": "selectNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós a serem selecionados.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1849,
            "description": "Método responsável por não selecionar um conjunto de nós.",
            "itemtype": "method",
            "name": "unselectNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1865,
            "description": "Método responsável por trocar a seleção de um conjunto de nós.",
            "itemtype": "method",
            "name": "toggleNodeSelected",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1882,
            "description": "Método responsável por retrair todos os nós.",
            "itemtype": "method",
            "name": "collapseAll",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1898,
            "description": "Método responsável por retrair un conjunto de nós.",
            "itemtype": "method",
            "name": "collapseNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1914,
            "description": "Método responsável por expandir todos os nós.",
            "itemtype": "method",
            "name": "expandAll",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1937,
            "description": "Método responsável por expandir um conjunto de nós.",
            "itemtype": "method",
            "name": "expandNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1956,
            "description": "Método responsável por expandir um conjunto de nós de um determinado nível.",
            "itemtype": "method",
            "name": "expandLevels",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "nodes",
                    "description": "Conjunto de nós",
                    "type": "Array"
                },
                {
                    "name": "level",
                    "description": "Nível que permite expansão",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1976,
            "description": "Método responsável por expandir o pai de um conjunto de nós",
            "itemtype": "method",
            "name": "revealNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 1996,
            "description": "Método responsável por trocar o modo de expansão de um conjunto de nós",
            "itemtype": "method",
            "name": "toggleNodeExpanded",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2013,
            "description": "Método responsável por marcar todos os nós;",
            "itemtype": "method",
            "name": "checkAll",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2029,
            "description": "Método responsável por marcar um conjunto de nós.",
            "itemtype": "method",
            "name": "checkNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2045,
            "description": "Método responsável por desmarcar todos os nós",
            "itemtype": "method",
            "name": "uncheckAll",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2061,
            "description": "Método responsável por desmarcar um conjunto de nós",
            "itemtype": "method",
            "name": "uncheckNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2077,
            "description": "Método responsável por trocar o estado de marcação de um conjunto de nós.",
            "itemtype": "method",
            "name": "toggleNodeChecked",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2094,
            "description": "Método responsável por desativar todos os nós",
            "itemtype": "method",
            "name": "disableAll",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2110,
            "description": "Método responsável por desativar um conjunto de nós",
            "itemtype": "method",
            "name": "disableNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2126,
            "description": "Método responsável por ativar todos os nós",
            "itemtype": "method",
            "name": "enableAll",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2142,
            "description": "Método responsável por ativar um conjunto de nós",
            "itemtype": "method",
            "name": "enableNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2158,
            "description": "Método responsável por trocar o estado de ativação de um conjunto de nós",
            "itemtype": "method",
            "name": "toggleNodeDisabled",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2175,
            "description": "Método responsável por identificar um conjunto de seletores.",
            "itemtype": "method",
            "name": "forEachIdentifier",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifiers",
                    "description": "Conjunto de nós.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Função a ser executada para cada nó.",
                    "type": "Function"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2197,
            "description": "Método responsável por identificar um seletor",
            "itemtype": "method",
            "name": "identifyNode",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "identifier",
                    "description": "",
                    "type": "Selector | Number"
                }
            ],
            "return": {
                "description": "Nó da TreeView."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2210,
            "description": "Método responsável por buscar por um item na TreeView (Caso a opção de busca esteja ativada).",
            "itemtype": "method",
            "name": "search",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "pattern",
                    "description": "Termo a ser pesquisado.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Conjunto de nós."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2260,
            "description": "Método responsável por limpar o campo de busca.",
            "itemtype": "method",
            "name": "clearSearch",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "options",
                    "description": "Conjunto de opções do plugin.",
                    "type": "Object"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2282,
            "description": "Método responsável por procurar um conjunto de nós segundo um critério (atributo).",
            "itemtype": "method",
            "name": "findNodes",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "pattern",
                    "description": "Termo a ser pesquisado",
                    "type": "String"
                },
                {
                    "name": "modifier",
                    "description": "Opção para o Regex.",
                    "type": "String"
                },
                {
                    "name": "attribute",
                    "description": "Atributo a ser pesquisado o termo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Conjunto de nós."
            },
            "class": "Tree"
        },
        {
            "file": "Tree.js",
            "line": 2306,
            "description": "Método responsável por obter o valor de um determinado atributo de um nó.",
            "itemtype": "method",
            "name": "getNodeValue",
            "author": "Jonathan Miles",
            "params": [
                {
                    "name": "obj",
                    "description": "Nó ou um objeto qualquer.",
                    "type": "Object"
                },
                {
                    "name": "attr",
                    "description": "Atributo no qual deseja-se obter o valor.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "O valor do atributo do objeto."
            },
            "class": "Tree"
        },
        {
            "file": "UIEvents.js",
            "line": 10,
            "description": "Método responsável por selecionar o pai de um determinado elemento.",
            "itemtype": "method",
            "name": "_getParent",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "el",
                    "description": "Elemento concreto no qual deseja-se obter o pai.",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "O pai do elemento concreto. Caso não tenha um pai, retorna o protótipo."
            },
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 21,
            "description": "Método responsável por obter o handle de um determinado elemento concreto.",
            "itemtype": "method",
            "name": "_getHandle",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "el",
                    "description": "Elemento concreto no qual se deseja obter o handle",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "O handle do elemento."
            },
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 32,
            "description": "Método responsável por atualizar a posição de um determinado elemento.",
            "itemtype": "method",
            "name": "_refreshPosition",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "el",
                    "description": "Elemento no qual deseja-se atualizar a posição.",
                    "type": "JQuery"
                }
            ],
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 47,
            "description": "Método responsável por obter a largura de um elemento.",
            "itemtype": "method",
            "name": "_getWidth",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "el",
                    "description": "Elemento no qual deseja-se obter a largura",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "A largura do elemento concreto."
            },
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 66,
            "description": "Método responsável por determinar a altura mínima de um elemento de acordo com seu conteúdo interno.",
            "itemtype": "method",
            "name": "_setMinHeight",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "el",
                    "description": "Elemento concreto no qual deseja-se determinar a altura mínima",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "A altura mínima para o elemento."
            },
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 82,
            "description": "Método responsável por atualizar o tamanho do elemento concreto.",
            "itemtype": "method",
            "name": "_refreshResize",
            "author": "João Victor Magela",
            "params": [
                {
                    "name": "el",
                    "description": "Elemento concreto no qual deseja-se atualzar a largura.",
                    "type": "JQuery"
                }
            ],
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 108,
            "description": "Método responsável por executar os testes",
            "author": "João Victor Magela.",
            "itemtype": "method",
            "name": "tests",
            "static": 1,
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 120,
            "description": "Teste: Arrastar elemento",
            "author": "João Victor Magela\n\nVerificar se, ao arrastar um elemento, o mesmo respeita as regras de negócio.\nPassos:\n1 - Alterar o tipo do elemento.\n2 - Verificar se a operação foi feita com sucesso.",
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 186,
            "description": "Teste: Redimensionar elemento",
            "author": "João Victor Magela\n\nVerificar se, ao redimensionar um elemento, o mesmo respeita as regras de negócio.\nPassos:\n1 - Redimensionar e verificar se não está menor que a largura mínima.\n2 - Redimensionar e verificar se a altura é superior a soma da altura dos filhos.",
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 234,
            "description": "Método responsável por instalar o método Draggable do jQuery UI para os elementos concretos.",
            "itemtype": "method",
            "name": "setDraggable",
            "author": "João Victor Magela",
            "static": 1,
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 248,
            "description": "Evento disparado ao fim do arraste. Atualiza a posição do elemento concreto.",
            "itemtype": "event",
            "name": "Parar arraste",
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 260,
            "description": "Método responsável por instalar o método Resize do jQuery UI para os elementos concretos.",
            "itemtype": "method",
            "name": "resizeBox",
            "author": "João Victor Magela",
            "static": 1,
            "class": "UIEvents"
        },
        {
            "file": "UIEvents.js",
            "line": 274,
            "description": "Evento disparado ao redimensionar um elemento. Atualiza a dimensão do mesmo.",
            "itemtype": "event",
            "name": "Redimensionar elemento",
            "class": "UIEvents"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nMétodo responsável por trocar todas as ocorrências de uma determinada expressão por outra.",
            "line": " Code.js:107"
        },
        {
            "message": "Missing item type\nTeste: Gerar código das interfaces",
            "line": " Code.js:227"
        },
        {
            "message": "Missing item type\nTeste: Exibir Preview",
            "line": " Preview.js:540"
        },
        {
            "message": "Missing item type\nTeste: Salvar projeto",
            "line": " Project.js:281"
        },
        {
            "message": "Missing item type\nTeste: Novo projeto",
            "line": " Project.js:308"
        },
        {
            "message": "Missing item type\nTeste: Abrir projeto",
            "line": " Project.js:333"
        },
        {
            "message": "Missing item type\nTeste: Adicionar item à raiz da árvore",
            "line": " RenderElements.js:440"
        },
        {
            "message": "Missing item type\nTeste: Remover itens selecionados da raiz",
            "line": " RenderElements.js:456"
        },
        {
            "message": "Missing item type\nTeste: Editar elemento",
            "line": " RenderElements.js:471"
        },
        {
            "message": "Missing item type\nTeste: Adicionar filho",
            "line": " RenderElements.js:488"
        },
        {
            "message": "Missing item type\nTeste: Remover Elemento",
            "line": " RenderElements.js:503"
        },
        {
            "message": "Missing item type\nTeste: Remover filhos selecionados",
            "line": " RenderElements.js:516"
        },
        {
            "message": "Missing item type\nTeste: Inserir dados",
            "line": " RenderElements.js:531"
        },
        {
            "message": "Missing item type\nTeste: Alterar Tipo do Elemento",
            "line": " RenderElements.js:549"
        },
        {
            "message": "Missing item type\nTeste: Propriedades do elemento",
            "line": " Sidebar.js:81"
        },
        {
            "message": "Missing item type\nTeste: Salvar propriedades",
            "line": " Sidebar.js:124"
        },
        {
            "message": "Missing item type\nTeste: Arrastar elemento",
            "line": " UIEvents.js:120"
        },
        {
            "message": "Missing item type\nTeste: Redimensionar elemento",
            "line": " UIEvents.js:186"
        }
    ]
}